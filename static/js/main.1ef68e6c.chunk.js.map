{"version":3,"sources":["logo.svg","res/background.jpg","components/Button.tsx","components/Text.tsx","components/TopBar.tsx","pages/landing/LandingPage.tsx","components/Game.jsx","components/PostMatchResults.tsx","components/UserRank.tsx","components/Player.tsx","components/UserTeam.tsx","pages/dashboard/Dashboard.tsx","pages/pickems/PlayerCell.tsx","pages/pickems/teamToLogo.tsx","pages/pickems/CustomTeam.tsx","pages/pickems/TeamSelect.tsx","pages/pickems/TeamCreation.tsx","App.tsx","reportWebVitals.ts","res/Valorant.ttf","index.tsx"],"names":["Container","styled","button","Colors","bgDark","secondary","css","bgLight","textLight","primary","disabled","textDark","Border","div","borderLight","Button","children","rest","Header","h1","Valorant","P","p","bgBlack","textWhite","Section","Link","RouterLink","StartButton","TopBar","className","history","useHistory","to","localStorage","getItem","onClick","push","StyledTopBar","Page","BgContainer","Background","img","Hero","Input","input","LandingPage","React","useState","name","setName","validName","length","src","background","style","color","fontSize","marginBottom","margin","alignSelf","whiteSpace","marginTop","display","value","onChange","e","target","placeholder","setItem","maxWidth","width","height","marginLeft","padding","border","commonHeaders","accessor","Table","columns","data","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","GameInfoWrapper","GameTitle","Winner","StyledTable","Game","game","gameNumber","mapName","team1Data","vlr","team2Data","generateColumns","generateTableData","playerData","teamName","ign","agent","winner","score","MatchResultWrapper","MatchName","GamesWrapper","PostMatchResults","match","opponent1","opponent1score","opponent2score","opponent2","games","filter","index","team1PlayerData","Object","fromEntries","entries","extradata","key","val","startsWith","t1pd","pd","split","kills","deaths","assists","team2PlayerData","t2pd","isYou","user","UserRankWrapper","TeamWrapper","props","Header2","h2","UserCol","ScoreCol","UserRank","userList","setUserList","useEffect","a","axios","get","process","res","tmpList","userId","sort","b","slice","newUserList","tmpScore","fetchMatches","place","teamToLogo","TSM","T1","Sentinels","Dignitas","Renegades","XSET","PlayerWrapper","DataWrapper","PhotoWrapper","PlayerInfo","Text","HeaderText","Player","playerName","playerTeam","playerScore","playerKDA","UserTeamWrapper","UserTeam","playerList","player","DashboardWrapper","TeamRankWrapper","ResultsWrapper","Dashboard","startingInfoList","playerInfoList","setPlayerInfoList","setScore","fetchPicks","useCallback","playerArr","picks","teamPromises","all","Promise","then","newScore","newPlayerInfoList","result","id","team","matches","setMatches","params","tournament","Flag","PlayerCell","logo","innerRef","ref","CustomTeam","customTeam","findTeam","droppableId","isDropDisabled","provided","snapshot","droppableProps","draggableId","draggableProps","dragHandleProps","selectStyles","option","isSelected","isFocused","fontFamily","backgroundColor","singleValue","state","control","borderRadius","menu","PlayerList","TeamLogo","motion","TeamSelect","teams","curTeamName","setCurTeamName","curTeam","find","styles","options","label","exitBeforeEnter","initial","x","opacity","animate","exit","transition","duration","players","Content","TeamCreation","setCustomTeam","fetchedTeams","setFetchedTeams","setTeams","createTeam","uid","join","console","error","alert","playersObj","includes","fetchData","onDragEnd","source","destination","newCustomTeam","splice","removed","teamNameOfRemoved","teamOfRemoved","droppableSource","droppableDestination","sourceClone","Array","from","destClone","move","newCurTeam","justifyContent","alignItems","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ef68e6c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","export default __webpack_public_path__ + \"static/media/background.7813339f.jpg\";","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport Colors from 'res/colors.json';\r\n\r\nconst Button = ({ children, secondary = false, ...rest }) => (\r\n  <Border>\r\n    <Container secondary={secondary} {...rest}>\r\n      {children}\r\n    </Container>\r\n  </Border>\r\n);\r\n\r\nconst Container = styled.button<any>`\r\n  padding: 19px 30px;\r\n  font-family: FFMark;\r\n  font-size: 14px;\r\n  text-transform: uppercase;\r\n  transition: all 0.3s;\r\n  margin: 6px;\r\n  border: none;\r\n  letter-spacing: 0.05em;\r\n  min-width: 274px;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: ${Colors.bgDark};\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${({ secondary }) =>\r\n    secondary\r\n      ? css`\r\n          background: ${Colors.bgLight};\r\n          color: ${Colors.bgDark};\r\n\r\n          &:hover {\r\n            background: ${Colors.bgDark};\r\n            color: ${Colors.textLight};\r\n          }\r\n        `\r\n      : css`\r\n          background: ${Colors.primary};\r\n          color: ${Colors.textLight};\r\n        `}\r\n\r\n  ${({ disabled }) =>\r\n    disabled &&\r\n    css`\r\n      background: transparent;\r\n      color: ${Colors.textDark};\r\n      pointer-events: none;\r\n    `}\r\n`;\r\n\r\nconst Border = styled.div`\r\n  border: 1px solid ${Colors.borderLight};\r\n`;\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\nimport Colors from 'res/colors.json';\r\n\r\nexport const Header = styled.h1`\r\n  font-family: Tungsten-Bold;\r\n  text-transform: uppercase;\r\n  margin: 0;\r\n`;\r\n\r\nexport const Valorant = styled.h1`\r\n  font-family: Valorant;\r\n`;\r\n\r\nexport const P = styled.p`\r\n  font-family: OpenSans-Regular;\r\n  color: ${Colors.textDark};\r\n  margin: 0;\r\n`;\r\n\r\nexport const TopBarText = styled.p`\r\n  font-family: FFMark;\r\n  font-size: 12px;\r\n  letter-spacing: 0.1em;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Colors from 'res/colors.json';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\n\r\nimport Button from 'components/Button';\r\nimport { Valorant } from 'components/Text';\r\n\r\nconst TopBar = ({ className }: { className?: string }) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <Container className={className}>\r\n      <Section>\r\n        <Link to=\"/\">\r\n          <Valorant>Built Diff</Valorant>\r\n        </Link>\r\n        {localStorage.getItem('uid') && <Link to=\"/dashboard\">Dashboard</Link>}\r\n      </Section>\r\n      <StartButton onClick={() => history.push('/')}>Get started</StartButton>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  position: sticky;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  align-self: stretch;\r\n  height: 80px;\r\n  width: 100%;\r\n  background: ${Colors.bgBlack};\r\n  color: ${Colors.textWhite};\r\n  font-family: FFMark;\r\n  letter-spacing: 0.1em;\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n  top: 0;\r\n\r\n  > :first-child {\r\n    margin-left: 32px;\r\n  }\r\n\r\n  > :last-child {\r\n    margin-right: 32px;\r\n  }\r\n`;\r\n\r\nconst Section = styled.div`\r\n  display: flex;\r\n  align-self: stretch;\r\n  align-items: center;\r\n`;\r\n\r\nconst Link = styled(RouterLink)`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 10px;\r\n  padding: 2px 12px;\r\n  border-bottom: 2px solid transparent;\r\n  transition: all 0.3s;\r\n  font-family: FFMark;\r\n  font-size: 12px;\r\n  letter-spacing: 0.1em;\r\n  color: ${Colors.textWhite};\r\n  text-decoration: none;\r\n  align-self: stretch;\r\n\r\n  &:hover {\r\n    border-bottom-color: ${Colors.primary};\r\n  }\r\n`;\r\n\r\nconst StartButton = styled(Button)`\r\n  min-width: 128px;\r\n  padding: 11px 30px;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Colors from 'res/colors.json';\r\nimport background from 'res/background.jpg';\r\nimport TopBar from 'components/TopBar';\r\nimport Button from 'components/Button';\r\nimport { Valorant, Header, P } from 'components/Text';\r\nimport { isWhiteSpaceLike } from 'typescript';\r\n\r\nconst LandingPage = () => {\r\n  const [name, setName] = React.useState('');\r\n  const history = useHistory();\r\n\r\n  const validName = name.length > 3;\r\n\r\n  const onStart = () => {\r\n    if (!validName) {\r\n      return;\r\n    }\r\n\r\n    localStorage.setItem('uid', name);\r\n    history.push('/pickems');\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <StyledTopBar />\r\n      <BgContainer>\r\n        <Background src={background} />\r\n        <Hero>\r\n          <Valorant\r\n            style={{\r\n              color: Colors.bgLight,\r\n              fontSize: '6.5rem',\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            Built Diff\r\n          </Valorant>\r\n          <Valorant\r\n            style={{ margin: 0, color: Colors.bgLight, marginBottom: 10 }}\r\n          >\r\n            -\r\n          </Valorant>\r\n          <Valorant\r\n            style={{\r\n              color: Colors.borderLight,\r\n              fontSize: '3.5rem',\r\n              alignSelf: 'center',\r\n              whiteSpace: 'nowrap',\r\n              marginTop: 0,\r\n            }}\r\n          >\r\n            Valorant Fantasy League\r\n          </Valorant>\r\n          <div style={{ display: 'flex' }}>\r\n            <Input\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              placeholder=\"Enter your name...\"\r\n            />\r\n            <StartButton onClick={onStart} disabled={!validName}>\r\n              Start building\r\n            </StartButton>\r\n          </div>\r\n        </Hero>\r\n      </BgContainer>\r\n      <Section>\r\n        <div>\r\n          <Header style={{ fontSize: 48 }}>Build your pro team</Header>\r\n          <P style={{ maxWidth: 300, fontSize: 14 }}>\r\n            Built Diff is a webapp that allows you to construct your own\r\n            Valorant team from a pool of pro players and watch them compete in\r\n            the latest e-sports tournaments. Kills, deaths, and assists your\r\n            players earn will contribute to your team's overall combat score.\r\n            <br />\r\n            Compete against your friends and the global leaderboards to see who\r\n            drafted the true champions.\r\n          </P>\r\n        </div>\r\n        <img\r\n          style={{\r\n            width: 300,\r\n            height: 'auto',\r\n            marginLeft: 96,\r\n            padding: 6,\r\n            border: `1px solid ${Colors.borderLight}`,\r\n          }}\r\n          src=\"https://i.gyazo.com/00983eae2248b1a356a77a4b7cc1a002.png\"\r\n        />\r\n      </Section>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst StyledTopBar = styled(TopBar)`\r\n  z-index: 1;\r\n`;\r\n\r\nconst Page = styled.div`\r\n  background: ${Colors.bgLight};\r\n  min-height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-flow: column;\r\n  position: relative;\r\n`;\r\n\r\nconst BgContainer = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Background = styled.img`\r\n  width: 100%;\r\n  object-fit: cover;\r\n  object-position: center bottom;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Section = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 500px;\r\n`;\r\n\r\nconst Hero = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  background: ${Colors.bgLight};\r\n  border: 1px solid ${Colors.borderLight};\r\n  padding: 12px;\r\n  font-family: OpenSans-Regular;\r\n  font-size: 24px;\r\n  margin-right: 24px;\r\n  border-radius: 3px;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst StartButton = styled(Button)`\r\n  min-width: 150px;\r\n`;\r\n\r\nexport default LandingPage;\r\n","import React, { useMemo } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTable } from 'react-table';\r\n\r\nimport { textLight } from 'res/colors.json';\r\n\r\n// type GameInfo = {\r\n//   gameNumber: number,\r\n//   mapName: string,\r\n//   team1Data: TeamData,\r\n//   team2Data: TeamData,\r\n//   vlr: string,\r\n// }\r\n\r\n// type PlayerData = {\r\n//   ign: string,\r\n//   agent: string,\r\n//   kills: number,\r\n//   deaths: number,\r\n//   assists: number,\r\n// }\r\n\r\n// type TeamData = {\r\n//   score: number,\r\n//   name: string,\r\n//   playerData: Array<PlayerData>\r\n// }\r\n\r\n// type GameInfoProps = {\r\n//   game: GameInfo,\r\n// }\r\n\r\nconst commonHeaders = [\r\n  {\r\n    Header: 'K',\r\n    accessor: 'kills',\r\n  },\r\n  {\r\n    Header: 'D',\r\n    accessor: 'deaths',\r\n  },\r\n  {\r\n    Header: 'A',\r\n    accessor: 'assists',\r\n  }\r\n];\r\n\r\n// type ColumnProps = {\r\n//   Header: string,\r\n//   accessor: string,\r\n// };\r\n\r\n// type TableProps = {\r\n//   columns: Array<ColumnProps>,\r\n//   data: Array<PlayerData>,\r\n// }\r\n\r\n// const Table = ({ columns, data }: TableProps) => {\r\nconst Table = ({ columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    prepareRow,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n  })\r\n\r\n  return (\r\n    <table {...getTableProps()}>\r\n      <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>\r\n                {column.render('Header')}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n      <tbody {...getTableBodyProps()}>\r\n        {rows.map((row, i) => {\r\n          prepareRow(row);\r\n          return (\r\n            <tr {...row.getRowProps()}>\r\n              {row.cells.map(cell =>\r\n                <td {...cell.getCellProps()}>\r\n                  {cell.render(\"Cell\")}\r\n                </td>)}\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nconst Game = ({ game: {\r\n  gameNumber,\r\n  mapName,\r\n  vlr,\r\n  team1Data,\r\n  team2Data,\r\n// }}: GameInfoProps) => {\r\n}}) => {\r\n  const generateColumns = ({ name }) => [\r\n    {\r\n      Header: name,\r\n      accessor: 'teamName',\r\n    },\r\n    ...commonHeaders,\r\n  ];\r\n\r\n  const generateTableData = ({ playerData }) => playerData.map(data => ({\r\n    ...data,\r\n    teamName: `${data.ign} - ${data.agent}`\r\n  }))\r\n\r\n  let winner = \"Tie\";\r\n  if (team1Data.score < team2Data.score) {\r\n    winner = team2Data.name;\r\n  } else if (team1Data.score > team2Data.score) {\r\n    winner = team1Data.name;\r\n  }\r\n\r\n  return (\r\n    <GameInfoWrapper>\r\n      <GameTitle>\r\n        Map {gameNumber}: {mapName}\r\n      </GameTitle>\r\n      <Winner>\r\n        Winner: {winner} {team1Data.score}-{team2Data.score}\r\n        {/* add link */}\r\n      </Winner>\r\n      <StyledTable>\r\n        <Table\r\n          columns={generateColumns(team1Data)}\r\n          data={generateTableData(team1Data)}\r\n        />\r\n        <Table\r\n          columns={generateColumns(team2Data)}\r\n          data={generateTableData(team2Data)}\r\n        />\r\n      </StyledTable>\r\n    </GameInfoWrapper>\r\n  )\r\n};\r\n\r\nconst GameInfoWrapper = styled.div``;\r\nconst GameTitle = styled.p``;\r\nconst Winner = styled.p``;\r\nconst StyledTable = styled.div`\r\n  display: flex;\r\n  table {\r\n    margin-right: 40px;\r\n    border-spacing: 0;\r\n    border: 1px solid ${textLight};\r\n  }\r\n\r\n  tr {\r\n    .last-child {\r\n      td {\r\n        border-bottom: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  th, td {\r\n    margin: 0;\r\n    padding: 0.5rem;\r\n    border-bottom: 1px solid ${textLight};\r\n    border-right: 1px solid ${textLight};\r\n\r\n    .last-child {\r\n      border-right: 0;\r\n    }\r\n  }\r\n`;\r\n    // {\r\n    //   gameNumber: 1,\r\n    //   mapName: \"Ascent\",\r\n    //   vlr: \"link\",\r\n    //   team1Data: {\r\n    //     score: 13,\r\n    //     name: \"100 Thieves\",\r\n    //     playerData: [\r\n    //       {\r\n    //         ign: \"steel\",\r\n    //         agent: \"Killjoy\",\r\n    //         kills: 21,\r\n    //         deaths: 13,\r\n    //         assists: 3,\r\n    //       }\r\n    //     ]\r\n    //   },\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Match from './Match';\r\nimport Game from './Game';\r\n\r\ntype TournamentInfo = {\r\n  name: string;\r\n  link: string;\r\n};\r\n\r\ntype MatchInfo = {\r\n  id: number;\r\n  round: string;\r\n  opponent1: string;\r\n  opponent2: string;\r\n  opponent1score: number;\r\n  opponent2score: number;\r\n  games: Array<GameInfo>;\r\n};\r\n\r\ntype TeamInfo = {\r\n  socials: {\r\n    liquipedia?: string;\r\n    vlr?: string;\r\n    site?: string;\r\n    twitter?: string;\r\n    youtube?: string;\r\n    fb?: string;\r\n  };\r\n  name: string;\r\n};\r\n\r\ntype GameInfo = {\r\n  gameNumber: number;\r\n  mapName: string;\r\n  team1Data: TeamData;\r\n  team2Data: TeamData;\r\n  vlr: string;\r\n};\r\n\r\ntype PlayerData = {\r\n  ign: string;\r\n  agent: string;\r\n  acs: number;\r\n  kills: number;\r\n  deaths: number;\r\n  assists: number;\r\n};\r\n\r\ntype TeamData = {\r\n  score: number;\r\n  name: string;\r\n  playerData: Array<PlayerData>;\r\n};\r\n\r\ntype MatchResultsProps = {\r\n  match: MatchInfo;\r\n};\r\n\r\nconst PostMatchResults = ({ match }: any) => (\r\n  <MatchResultWrapper>\r\n    {/* <TournamentInfo>\r\n      {tournament.name} - {match.round}\r\n    </TournamentInfo> */}\r\n    <MatchName>\r\n      {match.opponent1} {match.opponent1score}-{match.opponent2score}{' '}\r\n      {match.opponent2}\r\n    </MatchName>\r\n    <GamesWrapper>\r\n      {match.games\r\n        .filter((game) => game.winner !== 'skip')\r\n        .map((game, index) => {\r\n          const team1PlayerData = Object.fromEntries(\r\n            Object.entries(game.extradata).filter(\r\n              ([key, val]) => key.startsWith('t1') && val !== ''\r\n            )\r\n          );\r\n\r\n          const t1pd: any = [];\r\n          for (let i = 1; i <= 5; i++) {\r\n            const pd = {\r\n              ign: team1PlayerData['t1p' + i],\r\n              agent: team1PlayerData['t1a' + i],\r\n            };\r\n            const [kills, deaths, assists] = (team1PlayerData[\r\n              't1kda' + i\r\n            ] as string).split('/');\r\n            t1pd.push({ ...pd, kills, deaths, assists });\r\n          }\r\n\r\n          const team2PlayerData = Object.fromEntries(\r\n            Object.entries(game.extradata).filter(\r\n              ([key, val]) => key.startsWith('t2') && val !== ''\r\n            )\r\n          );\r\n\r\n          const t2pd: any = [];\r\n          for (let i = 1; i <= 5; i++) {\r\n            const pd = {\r\n              ign: team2PlayerData['t2p' + i],\r\n              agent: team2PlayerData['t2a' + i],\r\n            };\r\n            const [kills, deaths, assists] = (team2PlayerData[\r\n              't2kda' + i\r\n            ] as string).split('/');\r\n            t2pd.push({ ...pd, kills, deaths, assists });\r\n          }\r\n\r\n          return (\r\n            <Game\r\n              game={\r\n                {\r\n                  gameNumber: index + 1,\r\n                  mapName: game.map,\r\n                  team1Data: {\r\n                    score: game.opponent1score,\r\n                    name: game.opponent1,\r\n                    playerData: t1pd,\r\n                  },\r\n                  team2Data: {\r\n                    score: game.opponent2score,\r\n                    name: game.opponent2,\r\n                    playerData: t2pd,\r\n                  },\r\n                } as GameInfo\r\n              }\r\n            />\r\n          );\r\n        })}\r\n    </GamesWrapper>\r\n  </MatchResultWrapper>\r\n);\r\n\r\nconst MatchResultWrapper = styled.div`\r\n  font-family: OpenSans-Regular;\r\n  padding-top: 20px;\r\n`;\r\n\r\n// const TournamentInfo = styled.p`\r\n//   font-family: FFMark;\r\n//   font-size: 24px;\r\n//   letter-spacing: 0.1em;\r\n// `;\r\n\r\nconst MatchName = styled.p`\r\n  font-family: FFMark;\r\n  font-size: 18px;\r\n  letter-spacing: 0.1em;\r\n`;\r\n\r\nconst GamesWrapper = styled.div`\r\n  font-family: OpenSans-regular;\r\n`;\r\n\r\nexport default PostMatchResults;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nimport { primary } from 'res/colors.json';\r\n\r\ntype UserTeamProps = {\r\n  score: number,\r\n};\r\n\r\nconst userList = [\"turrence\", \"selynna (you)\", \"nguyen-darianhuy\", \"dzhang50\"];\r\nconst placeEnd = (num: number) => {\r\n  switch (num) {\r\n    case 1:\r\n      return \"st\";\r\n      break;\r\n    case 2:\r\n      return \"nd\";\r\n      break;\r\n    case 3:\r\n      return \"rd\";\r\n      break;\r\n    default:\r\n      return \"th\";\r\n  }\r\n}\r\n\r\nconst isYou = user => localStorage.getItem('uid') === user;\r\n\r\nconst UserRank = ({ score }: UserTeamProps) => {\r\n  const [userList, setUserList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMatches = async () => {\r\n      const res = await axios.get(`${process.env.REACT_APP_API_URL}/getAllUsers/`);\r\n      const tmpList = res.data.map(user => ({\r\n        userId: user.userId,\r\n        score: isYou(user.userId) ? score : 13000,\r\n      })).sort((a, b) => b.score - a.score).slice(0, 5);\r\n      const newUserList = tmpList.map((user, i) => {\r\n        const tmpScore = user.score;\r\n        if (isYou(user.userId)) {\r\n          return user;\r\n        } else if (!isYou(user.userId) && i < 3) {\r\n          return {\r\n            userId: user.userId,\r\n            score: tmpScore - (150 * i)\r\n          }\r\n        } else {\r\n          return {\r\n            userId: user.userId,\r\n            score: tmpScore + (175 * i)\r\n          }\r\n        }\r\n      })\r\n      newUserList.sort((a, b) => b.score - a.score);\r\n      setUserList(newUserList);\r\n    };\r\n    fetchMatches();\r\n  }, [score]);\r\n\r\n  return (\r\n    <UserRankWrapper>\r\n      <Header2>\r\n        RANKINGS\r\n      </Header2>\r\n      {userList.map((user: any, place) => \r\n        <TeamWrapper key={user.userId} user={isYou(user.userId)}>\r\n          <UserCol>\r\n            {isYou(user.userId) ? user.userId + \" (you)\" : user.userId}\r\n          </UserCol>\r\n          <ScoreCol>{user.score}</ScoreCol>\r\n        </TeamWrapper>\r\n      )}\r\n    </UserRankWrapper>\r\n  )\r\n};\r\n\r\nconst UserRankWrapper =  styled.div`\r\n  font-family: OpenSans-Regular;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst PhotoWrapper = styled.div`\r\n  border: 1px solid ${primary};\r\n  border-radius: 50%;\r\n  width: 30px;\r\n  height: 30px;\r\n  margin: 5px;\r\n`;\r\n\r\nconst TeamWrapper = styled.div`\r\n  box-shadow: ${(props: { user: boolean }) => props.user ? '0px 0px 5px #fff' : ''};\r\n  border-radius: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 12px 6px 10px -8px;\r\n  padding: 0 10px;\r\n  width: max-content;\r\n`;\r\n\r\nconst Header2 = styled.h2`\r\n  font-family: Tungsten-Bold;\r\n  font-size: 60px;\r\n  letter-spacing: 1.5px;\r\n  margin: 0;\r\n`;\r\n\r\nconst UserCol = styled.div`\r\n  width: 180px;\r\n`;\r\n\r\nconst ScoreCol = styled.div`\r\n  padding: 0 3px 0 20px;\r\n`;\r\n\r\nexport default UserRank;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { primary } from 'res/colors.json';\r\n\r\ntype PlayerProps = {\r\n  playerName: string;\r\n  playerTeam: string;\r\n  playerKDA: string;\r\n  playerScore: number;\r\n};\r\n\r\nconst teamToLogo = {\r\n  'Cloud9 Blue': 'https://i.imgur.com/FQlShBU.png',\r\n  'Gen.G Esports': 'https://i.imgur.com/hzoTJyj.png',\r\n  'Team Envy': 'https://i.imgur.com/VL5iPJM.png',\r\n  TSM: 'https://i.imgur.com/zencKPh.png',\r\n  '100 Thieves': 'https://i.imgur.com/LI8nJ0I.png',\r\n  T1: 'https://i.imgur.com/xsnqlul.png',\r\n  Sentinels: 'https://i.imgur.com/HST365I.png',\r\n  'The Slimy Boogermen': 'https://i.imgur.com/tw9ixr1.png',\r\n  'Luminosity Gaming': 'https://i.imgur.com/BnjfZWu.png',\r\n  'Complexity Gaming': 'https://i.imgur.com/gP7R4E3.png',\r\n  Dignitas: 'https://i.imgur.com/EisGrug.png',\r\n  Renegades: 'https://i.imgur.com/UHw1VpC.png',\r\n  XSET: 'https://i.imgur.com/OWYBbXr.png',\r\n  'Equinox Esports': 'https://i.imgur.com/j2DIJjl.png',\r\n  'Spot Up': 'https://i.imgur.com/4qY7Lzu.png',\r\n  'Built By Gamers': 'https://i.imgur.com/mPAPorf.png',\r\n  'Team Liquid': 'https://i.imgur.com/OtZfAU8.png',\r\n};\r\n\r\nconst Player = ({\r\n  playerName,\r\n  playerTeam,\r\n  playerKDA,\r\n  playerScore,\r\n}: PlayerProps) => (\r\n  <PlayerWrapper>\r\n    <PhotoWrapper\r\n      src={teamToLogo[playerTeam] || teamToLogo['The Slimy Boogermen']}\r\n    />\r\n    {/* <img src={teamToLogo[playerTeam]} /> */}\r\n    <PlayerInfo>\r\n      <HeaderText>\r\n        {playerName} - {playerTeam}\r\n      </HeaderText>\r\n      <DataWrapper>\r\n        {/* <Text>Average KDA: {playerKDA}</Text> */}\r\n        <Text>Total ACS: {playerScore}</Text>\r\n      </DataWrapper>\r\n    </PlayerInfo>\r\n  </PlayerWrapper>\r\n);\r\n\r\nconst PlayerWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst DataWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst PhotoWrapper = styled.img`\r\n  border: 1px solid white;\r\n  border-radius: 50%;\r\n  width: 60px;\r\n  height: 60px;\r\n  margin: 10px 20px 10px 0;\r\n`;\r\n\r\nconst PlayerInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-family: OpenSans-Regular;\r\n  font-size: 16px;\r\n  margin: 0;\r\n`;\r\n\r\nconst HeaderText = styled.p`\r\n  font-family: FFMark;\r\n  font-size: 18px;\r\n  letter-spacing: 0.1em;\r\n  margin: 0;\r\n`;\r\n\r\nexport default Player;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Player from './Player';\r\n\r\ntype playerInfo = {\r\n  playerName: string,\r\n  playerTeam: string,\r\n  playerKDA: string,\r\n  playerScore: number,\r\n}\r\n\r\ntype UserTeamProps = {\r\n  playerList: Array<playerInfo>\r\n};\r\n\r\nconst UserTeam = ({ playerList }: UserTeamProps) => (\r\n  <UserTeamWrapper>\r\n    <Header2>\r\n      YOUR TEAM\r\n    </Header2>\r\n    <TeamWrapper>\r\n      {playerList.map((player, i) => <Player key={player.playerName + i} {...player} />)}\r\n    </TeamWrapper>\r\n  </UserTeamWrapper>\r\n);\r\n\r\nconst UserTeamWrapper = styled.div`\r\n  border-right: 1px solid gray;\r\n  margin-right: 30px;\r\n`;\r\n\r\nconst TeamWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Header2 = styled.h2`\r\n  font-family: Tungsten-Bold;\r\n  font-size: 72px;\r\n  letter-spacing: 2px;\r\n  margin: 0;\r\n`;\r\n\r\nexport default UserTeam;\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n} from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nimport { bgDark, textLight } from 'res/colors.json';\r\nimport PostMatchResults from 'components/PostMatchResults';\r\nimport TopBar from 'components/TopBar';\r\nimport UserRank from 'components/UserRank';\r\nimport UserTeam from 'components/UserTeam';\r\n\r\ntype PlayerInfo = {\r\n  playerName: string;\r\n  playerTeam: string;\r\n  playerKDA: string;\r\n  playerScore: number;\r\n};\r\n\r\ntype TournamentInfo = {\r\n  name: string;\r\n  link: string;\r\n};\r\n\r\nconst tournament: TournamentInfo = {\r\n  name: 'NSG Closed Qualifier',\r\n  link: 'vlr.gg',\r\n};\r\n\r\ntype MatchInfo = {\r\n  id: number;\r\n  round: string;\r\n  opponent1: string;\r\n  opponent2: string;\r\n  opponent1score: number;\r\n  opponent2score: number;\r\n  games: Array<GameInfo>;\r\n};\r\n\r\ntype GameInfo = {\r\n  gameNumber: number;\r\n  mapName: string;\r\n  team1Data: TeamData;\r\n  team2Data: TeamData;\r\n  vlr: string;\r\n};\r\n\r\ntype PlayerData = {\r\n  ign: string;\r\n  agent: string;\r\n  acs: number;\r\n  kills: number;\r\n  deaths: number;\r\n  assists: number;\r\n};\r\n\r\ntype TeamData = {\r\n  score: number;\r\n  name: string;\r\n  playerData: Array<PlayerData>;\r\n};\r\n\r\nconst match: MatchInfo = {\r\n  id: 1,\r\n  round: 'quarterfinals',\r\n  opponent1: 'Team Solomid',\r\n  opponent1score: 0,\r\n  opponent2: '100 Thieves',\r\n  opponent2score: 2,\r\n  games: [\r\n    {\r\n      gameNumber: 1,\r\n      mapName: 'Ascent',\r\n      vlr: 'link',\r\n      team1Data: {\r\n        score: 13,\r\n        name: '100 Thieves',\r\n        playerData: [\r\n          {\r\n            ign: 'steel',\r\n            agent: 'Killjoy',\r\n            acs: 294,\r\n            kills: 21,\r\n            deaths: 13,\r\n            assists: 3,\r\n          },\r\n          {\r\n            ign: 'Dicey',\r\n            agent: 'jett',\r\n            acs: 294,\r\n            kills: 21,\r\n            deaths: 13,\r\n            assists: 3,\r\n          },\r\n        ],\r\n      },\r\n      team2Data: {\r\n        score: 7,\r\n        name: 'Team Solomid',\r\n        playerData: [\r\n          {\r\n            ign: 'Wardell',\r\n            agent: 'Jett',\r\n            acs: 315,\r\n            kills: 22,\r\n            deaths: 14,\r\n            assists: 0,\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  ],\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const [hasError, setErrors] = useState(false);\r\n  const startingInfoList = [0, 1, 2, 3, 4].map(i => ({\r\n    playerName: \"-\",\r\n    playerTeam: \"-\",\r\n    playerScore: 0,\r\n    playerKDA: \"10/5/10\",\r\n  }))\r\n  const [playerInfoList, setPlayerInfoList] = useState<PlayerInfo[]>(startingInfoList);\r\n  const [score, setScore] = useState(0);\r\n\r\n  const fetchPicks = useCallback(async () => {\r\n    const res = await axios.get(process.env.REACT_APP_API_URL + \"/getUserPicks/?uid=\" + localStorage.getItem('uid'))\r\n    const playerArr = res.data.picks;\r\n    const teamPromises = playerArr.map(player =>\r\n      axios.all([\r\n        axios.get(process.env.REACT_APP_API_URL + \"/getplayer/?player=\" + player),\r\n        axios.get(process.env.REACT_APP_API_URL + \"/getPlayerCombatScore/?tournament=First%20Strike%20North%20America%20-%20NSG%20Tournament&player=\" + player),\r\n      ])\r\n    );\r\n\r\n    Promise.all(teamPromises)\r\n      .then(res => {\r\n        let newScore = 0;\r\n        const newPlayerInfoList = res.map((data: any) => {\r\n          const ign = data[0].data.result[0].id;\r\n          const team = data[0].data.result[0].team;\r\n          const score = data[1].data.score;\r\n          newScore += score;\r\n          return {\r\n            playerName: ign,\r\n            playerTeam: team,\r\n            playerScore: score,\r\n            playerKDA: \"10/5/10\",\r\n          }\r\n        });\r\n        setPlayerInfoList(playerInfoList => newPlayerInfoList);\r\n        setScore(newScore);\r\n      })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchPicks();\r\n  }, []);\r\n\r\n  const [matches, setMatches] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    const fetchMatches = async () => {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/getmatches/`,\r\n        {\r\n          params: { tournament: 'First Strike North America - NSG Tournament' },\r\n        }\r\n      );\r\n\r\n      setMatches(res.data.result);\r\n    };\r\n    fetchMatches();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <TopBar />\r\n      <DashboardWrapper>\r\n        <TeamRankWrapper>\r\n          <UserTeam playerList={playerInfoList} />\r\n          <UserRank score={score} />\r\n        </TeamRankWrapper>\r\n        <ResultsWrapper>\r\n          <Header2>\r\n            POST MATCH RESULTS\r\n            {/* first strike na in the background in block text? */}\r\n          </Header2>\r\n          {matches && matches.map((match) => <PostMatchResults match={match} />)}\r\n        </ResultsWrapper>\r\n      </DashboardWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DashboardWrapper = styled.div`\r\n  margin: 0;\r\n  padding: 0;\r\n  background-color: ${bgDark};\r\n  color: ${textLight};\r\n  min-height: 100vh;\r\n  display: flex;\r\n`;\r\n\r\nconst TeamRankWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 20px;\r\n  width: 33%;\r\n  margin-left: 60px;\r\n`;\r\n\r\nconst ResultsWrapper = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Header2 = styled.h2`\r\n  font-family: Tungsten-Bold;\r\n  font-size: 72px;\r\n  letter-spacing: 2px;\r\n  margin: 0;\r\n`;\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Colors from 'res/colors.json';\r\n\r\nconst Container = styled.div<any>`\r\n  font-size: 4rem;\r\n  font-family: Tungsten-Bold;\r\n  color: ${Colors.bgDark};\r\n  border: 1px solid ${Colors.borderLight};\r\n  padding: 0 16px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Flag = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  padding-right: 16px;\r\n`;\r\n\r\nconst PlayerCell = ({ player, logo, innerRef, ...props }) => (\r\n  <Container ref={innerRef} {...props}>\r\n    <Flag src={logo} />\r\n    <span>{player.name}</span>\r\n  </Container>\r\n);\r\nexport default PlayerCell;\r\n","const teamToLogo = {\r\n  'Cloud9 Blue': 'https://i.imgur.com/FQlShBU.png',\r\n  'Gen.G Esports': 'https://i.imgur.com/hzoTJyj.png',\r\n  'Team Envy': 'https://i.imgur.com/VL5iPJM.png',\r\n  TSM: 'https://i.imgur.com/zencKPh.png',\r\n  '100 Thieves': 'https://i.imgur.com/LI8nJ0I.png',\r\n  T1: 'https://i.imgur.com/xsnqlul.png',\r\n  Sentinels: 'https://i.imgur.com/HST365I.png',\r\n  'The Slimy Boogermen': 'https://i.imgur.com/tw9ixr1.png',\r\n  'Luminosity Gaming': 'https://i.imgur.com/BnjfZWu.png',\r\n  'Complexity Gaming': 'https://i.imgur.com/gP7R4E3.png',\r\n  Dignitas: 'https://i.imgur.com/EisGrug.png',\r\n  Renegades: 'https://i.imgur.com/UHw1VpC.png',\r\n  XSET: 'https://i.imgur.com/OWYBbXr.png',\r\n  'Equinox Esports': 'https://i.imgur.com/j2DIJjl.png',\r\n  'Spot Up': 'https://i.imgur.com/4qY7Lzu.png',\r\n  'Built By Gamers': 'https://i.imgur.com/mPAPorf.png',\r\n  'Team Liquid': 'https://i.imgur.com/OtZfAU8.png',\r\n};\r\n\r\nexport default teamToLogo;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Colors from 'res/colors.json';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\n\r\nimport PlayerCell from './PlayerCell';\r\nimport teamToLogo from './teamToLogo';\r\n\r\nconst CustomTeam = ({ customTeam, findTeam }) => {\r\n  return (\r\n    <Droppable droppableId=\"customTeam\" isDropDisabled={customTeam.length >= 5}>\r\n      {(provided, snapshot) => (\r\n        <Container {...provided.droppableProps} ref={provided.innerRef}>\r\n          {customTeam.map((player, index) => (\r\n            <Draggable\r\n              key={player.name}\r\n              draggableId={player.name}\r\n              index={index}\r\n            >\r\n              {(provided, snapshot) => (\r\n                <PlayerCell\r\n                  {...provided.draggableProps}\r\n                  {...provided.dragHandleProps}\r\n                  innerRef={provided.innerRef}\r\n                  player={player}\r\n                  logo={teamToLogo[findTeam(player.name)]}\r\n                />\r\n              )}\r\n            </Draggable>\r\n          ))}\r\n          {provided.placeholder}\r\n        </Container>\r\n      )}\r\n    </Droppable>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  height: 390px;\r\n  border: 1px solid ${Colors.borderLight};\r\n`;\r\n\r\nexport default CustomTeam;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Select from 'react-select';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n\r\nimport Colors from 'res/colors.json';\r\nimport { P } from 'components/Text';\r\n\r\nimport PlayerCell from './PlayerCell';\r\nimport teamToLogo from './teamToLogo';\r\n\r\nconst selectStyles = {\r\n  option: (provided: any, { isSelected, isFocused }: any) => {\r\n    return {\r\n      ...provided,\r\n      fontFamily: 'OpenSans-Regular',\r\n      background: isSelected\r\n        ? Colors.primary\r\n        : isFocused\r\n        ? '#ffcccb'\r\n        : Colors.bgLight,\r\n      ':active': {\r\n        ...provided[':active'],\r\n        backgroundColor: isSelected ? Colors.primary : '#ffa6a6',\r\n      },\r\n    };\r\n  },\r\n  singleValue: (provided: any, state: any) => ({\r\n    ...provided,\r\n    fontFamily: 'OpenSans-Regular',\r\n    background: Colors.bgLight,\r\n  }),\r\n  control: (provided: any, state: any) => ({\r\n    ...provided,\r\n    background: Colors.bgLight,\r\n    border: `1px solid ${Colors.borderLight}`,\r\n    borderRadius: 0,\r\n  }),\r\n  menu: (provided: any, state: any) => ({\r\n    ...provided,\r\n    background: Colors.bgLight,\r\n  }),\r\n};\r\n\r\nconst TeamSelect = ({ teams, curTeamName, setCurTeamName }) => {\r\n  const curTeam = teams.find((team) => team.name === curTeamName);\r\n\r\n  return (\r\n    <PlayerList>\r\n      <Select\r\n        styles={selectStyles}\r\n        options={teams.map((team) => ({ value: team.name, label: team.name }))}\r\n        onChange={({ value }: any) => {\r\n          setCurTeamName(value);\r\n        }}\r\n      />\r\n      <div style={{ height: 232, alignSelf: 'center' }}>\r\n        <AnimatePresence exitBeforeEnter>\r\n          {curTeam && (\r\n            <TeamLogo\r\n              key={curTeam.name}\r\n              initial={{ x: -150, opacity: 0 }}\r\n              animate={{ x: 0, opacity: 1 }}\r\n              exit={{ x: 150, opacity: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n              src={teamToLogo[curTeam.name]}\r\n            />\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n      <P style={{ marginBottom: 8 }}>Drag players to your team</P>\r\n      <Droppable droppableId=\"source\">\r\n        {(provided, snapshot) => (\r\n          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n            {curTeam?.players.map((player, index) => (\r\n              <Draggable\r\n                key={player.name}\r\n                draggableId={player.name}\r\n                index={index}\r\n              >\r\n                {(provided, snapshot) => (\r\n                  <PlayerCell\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    innerRef={provided.innerRef}\r\n                    player={player}\r\n                    logo={teamToLogo[curTeam.name]}\r\n                  />\r\n                )}\r\n              </Draggable>\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </PlayerList>\r\n  );\r\n};\r\n\r\nconst PlayerList = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n`;\r\n\r\nconst TeamLogo = styled(motion.img)`\r\n  width: auto;\r\n  height: auto;\r\n  max-height: 200px;\r\n  align-self: center;\r\n  margin: 16px 0;\r\n`;\r\n\r\nexport default TeamSelect;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport TopBar from 'components/TopBar';\r\nimport { P, Header } from 'components/Text';\r\nimport Colors from 'res/colors.json';\r\nimport Button from 'components/Button';\r\n\r\nimport CustomTeam from './CustomTeam';\r\nimport TeamSelect from './TeamSelect';\r\n\r\ntype Team = {\r\n  name: string;\r\n  logoUrl: string;\r\n  players: Array<Player>;\r\n};\r\n\r\ntype Player = {\r\n  name: string;\r\n  country: string;\r\n};\r\n\r\nconst mockTeams: Array<Team> = [\r\n  {\r\n    name: 'Team Liquid',\r\n    logoUrl: 'https://i.imgur.com/OtZfAU8.png',\r\n    players: [\r\n      {\r\n        name: 'ec1s',\r\n        country: 'United Kingdom',\r\n      },\r\n      { name: 'soulcas', country: 'United Kingdom' },\r\n      { name: 'Kryptix', country: 'United Kingdom' },\r\n      { name: 'L1NK', country: 'United Kingdom' },\r\n      { name: 'ScreaM', country: 'Belgium' },\r\n    ],\r\n  },\r\n  {\r\n    name: 'Sentinels',\r\n    logoUrl: 'https://i.imgur.com/HST365I.png',\r\n    players: [\r\n      {\r\n        name: 'ShahZaM',\r\n        country: 'United States',\r\n      },\r\n      { name: 'SicK', country: 'United States' },\r\n      { name: 'sinatraa', country: 'United States' },\r\n      { name: 'zombs', country: 'United States' },\r\n      { name: 'dapr', country: 'United States' },\r\n    ],\r\n  },\r\n];\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  return [sourceClone, destClone];\r\n};\r\n\r\nconst TeamCreation = () => {\r\n  const [customTeam, setCustomTeam] = React.useState<Player[]>([]);\r\n  const [fetchedTeams, setFetchedTeams] = React.useState<Team[]>([]);\r\n  const [teams, setTeams] = React.useState<Team[]>([]);\r\n  const [curTeamName, setCurTeamName] = React.useState(null);\r\n  const history = useHistory();\r\n\r\n  React.useEffect(() => {\r\n    if (!localStorage.getItem('uid')) {\r\n      history.push('/');\r\n    }\r\n  });\r\n\r\n  const findTeam = (playerName) => {\r\n    return fetchedTeams?.find((team) =>\r\n      team.players.find((player) => player.name === playerName)\r\n    )?.name;\r\n  };\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    if (\r\n      source.droppableId === 'customTeam' &&\r\n      (!destination || destination.droppableId !== 'customTeam')\r\n    ) {\r\n      const newCustomTeam = [...customTeam];\r\n      const [removed] = newCustomTeam.splice(source.index, 1);\r\n      const teamNameOfRemoved = findTeam(removed.name) as string;\r\n      const teamOfRemoved = teams.find(\r\n        (team) => team.name === teamNameOfRemoved\r\n      ) as Team;\r\n      setTeams(\r\n        teams.map((team) =>\r\n          team.name === teamNameOfRemoved\r\n            ? { ...team, players: [...teamOfRemoved.players, removed] }\r\n            : team\r\n        )\r\n      );\r\n      setCustomTeam(newCustomTeam);\r\n      return;\r\n    } else if (!destination || source.droppableId === destination.droppableId) {\r\n      return;\r\n    }\r\n\r\n    const curTeam = teams.find((team) => team.name === curTeamName) as Team;\r\n\r\n    const [newCurTeam, newCustomTeam] = move(\r\n      curTeam.players,\r\n      customTeam,\r\n      source,\r\n      destination\r\n    );\r\n\r\n    setTeams(\r\n      teams.map((team) =>\r\n        team.name === curTeamName\r\n          ? ({ ...team, players: newCurTeam } as Team)\r\n          : team\r\n      )\r\n    );\r\n    setCustomTeam(newCustomTeam as Player[]);\r\n  };\r\n\r\n  const createTeam = async () => {\r\n    try {\r\n      await axios.get(`${process.env.REACT_APP_API_URL}/setUserPicks/`, {\r\n        params: {\r\n          uid: localStorage.getItem('uid'),\r\n          players: customTeam.map((player) => player.name).join(','),\r\n        },\r\n      });\r\n      history.push('/dashboard');\r\n    } catch (e) {\r\n      console.error(e);\r\n      alert('Something went wrong. Please try again');\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await axios.get(\r\n        `${process.env.REACT_APP_API_URL}/getteamsfromtournament/`,\r\n        {\r\n          params: {\r\n            tournament: 'First Strike North America - NSG Tournament',\r\n          },\r\n        }\r\n      );\r\n\r\n      const fetchedTeams = Object.entries(res.data).map(\r\n        ([teamName, playersObj]: any) => ({\r\n          name: teamName,\r\n          players: Object.entries(playersObj)\r\n            .filter(([key, value]) => !key.includes('flag'))\r\n            .map(([key, value]) => ({ name: value })),\r\n        })\r\n      ) as any;\r\n\r\n      setFetchedTeams(fetchedTeams);\r\n      setTeams(fetchedTeams);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Page>\r\n      <TopBar />\r\n      <DragDropContext onDragEnd={onDragEnd}>\r\n        <Content>\r\n          <Section>\r\n            <Header style={{ fontSize: '5rem' }}>\r\n              Your team ({customTeam.length}/5)\r\n            </Header>\r\n            <P style={{ marginBottom: 16 }}>Drag outside to remove players</P>\r\n            <CustomTeam customTeam={customTeam} findTeam={findTeam} />\r\n          </Section>\r\n          <Section>\r\n            <Header style={{ fontSize: '5rem' }}>Find players</Header>\r\n            <P style={{ marginBottom: 8 }}>Choose Team</P>\r\n            <TeamSelect\r\n              teams={teams}\r\n              curTeamName={curTeamName}\r\n              setCurTeamName={setCurTeamName}\r\n            />\r\n          </Section>\r\n        </Content>\r\n      </DragDropContext>\r\n      <Section style={{ justifyContent: 'center', alignItems: 'center' }}>\r\n        <Button onClick={createTeam} disabled={customTeam.length < 5}>\r\n          Create\r\n        </Button>\r\n      </Section>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst Page = styled.div`\r\n  background: ${Colors.bgLight};\r\n  min-height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-flow: column;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nconst Section = styled.div`\r\n  flex: 1;\r\n  padding: 32px;\r\n  display: flex;\r\n  flex-flow: column;\r\n\r\n  &:first-child {\r\n    border-right: 1px solid ${Colors.borderLight};\r\n  }\r\n`;\r\n\r\nexport default TeamCreation;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport LandingPage from 'pages/landing/LandingPage';\r\nimport Dashboard from 'pages/dashboard/Dashboard';\r\nimport TeamCreation from 'pages/pickems/TeamCreation';\r\n\r\nconst Header = styled.h1`\r\n  font-family: Valorant;\r\n`;\r\n\r\nconst Header2 = styled.h2`\r\n  font-family: Tungsten-Bold;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-family: OpenSans-Regular;\r\n`;\r\n\r\nconst HeaderText = styled.p`\r\n  font-family: FFMark;\r\n  font-size: 12px;\r\n  letter-spacing: 0.1em;\r\n`;\r\n\r\nconst TestComponent = () => (\r\n  <div className=\"App\">\r\n    <header className=\"App-header\">\r\n      <HeaderText>GAME INFO</HeaderText>\r\n      <Header>Valorant But Fantasy Football</Header>\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n      <Header2>Section Header</Header2>\r\n      <Text>\r\n        Edit <code>src/App.tsx</code> and save to reload.\r\n      </Text>\r\n      <a\r\n        className=\"App-link\"\r\n        href=\"https://reactjs.org\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        Learn React\r\n      </a>\r\n    </header>\r\n  </div>\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/dashboard\">\r\n          <Dashboard />\r\n        </Route>\r\n        <Route path=\"/pickems\">\r\n          <TeamCreation />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <LandingPage />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/Valorant.86ec8370.ttf\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'res/Valorant.ttf';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}